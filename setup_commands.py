import asyncio
import os
import sys
import argparse
from typing import List

from telegram import Bot, BotCommand

from config import telegram


DEFAULT_COMMANDS: List[BotCommand] = [
    BotCommand("start", "üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
    BotCommand("help", "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º"),
    BotCommand("setgoal", "üéØ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–µ–ª—å"),
    BotCommand("today", "üìÖ –ó–∞–¥–∞—á–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"),
    BotCommand("today_async", "‚ö° –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (—Ç–µ—Å—Ç)"),
    BotCommand("check", "‚úçÔ∏è –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏"),
    BotCommand("status", "üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–∏"),
    BotCommand("motivation", "üí° –ú–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"),
    BotCommand("cancel", "‚õî –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é"),
    BotCommand("reset", "üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Ü–µ–ª–∏ (—É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é)"),
]

# --- –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ (Bot API >= 6.1) ---
SHORT_DESCRIPTION = "‚úÖ –õ–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: —Å—Ç–∞–≤—å—Ç–µ —Ü–µ–ª–∏ –∏ –¥–æ—Å—Ç–∏–≥–∞–π—Ç–µ –∏—Ö!"

FULL_DESCRIPTION = (
    "üéØ Target Assistant Bot –ø–æ–º–æ–≥–∞–µ—Ç —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ª—å, —Ä–∞–∑–±–∏—Ç—å –µ—ë –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ "
    "–æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ Google Sheets.\n\n"
    "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
    "‚Ä¢ /setgoal ‚Äî –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π AI\n"
    "‚Ä¢ /today ‚Äî –∑–∞–¥–∞—á–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
    "‚Ä¢ /today_async ‚Äî –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ (—Ç–µ—Å—Ç)\n"
    "‚Ä¢ /check ‚Äî –æ—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏\n"
    "‚Ä¢ /status ‚Äî –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–∏\n"
    "‚Ä¢ /motivation ‚Äî –º–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
    "‚Ä¢ /cancel ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é\n"
    "‚Ä¢ /reset ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Ü–µ–ª–∏ –∏ –¥–∞–Ω–Ω—ã–µ\n\n"
    "–î–∞–≤–∞–π—Ç–µ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ü–µ–ª–µ–π –≤–º–µ—Å—Ç–µ!"
)


async def _update_commands(force: bool = False):
    """–°–æ–∑–¥–∞—ë—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã BotFather.

    –ï—Å–ª–∏ force=False –∏ –Ω–∞–±–æ—Ä —É–∂–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç ‚Äì –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è.
    """

    token = telegram.token or os.getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –∏–ª–∏ config.py")
        sys.exit(1)

    bot = Bot(token=token)

    # --- –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã ---
    current_cmds = await bot.get_my_commands()
    if force or set((c.command, c.description) for c in current_cmds) != set(
        (c.command, c.description) for c in DEFAULT_COMMANDS
    ):
        await bot.set_my_commands(DEFAULT_COMMANDS)
        print("‚úÖ –ö–æ–º–∞–Ω–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã.")
    else:
        print("‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥—ã —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã ‚Äì –ø—Ä–æ–ø—É—â–µ–Ω–æ.")

    # --- –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ ---
    short_desc = await bot.get_my_short_description()
    if force or (short_desc.short_description or "") != SHORT_DESCRIPTION:
        await bot.set_my_short_description(short_description=SHORT_DESCRIPTION)
        print("‚úÖ SHORT_DESCRIPTION –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")

    # --- –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ ---
    full_desc = await bot.get_my_description()
    if force or (full_desc.description or "") != FULL_DESCRIPTION:
        await bot.set_my_description(description=FULL_DESCRIPTION)
        print("‚úÖ FULL_DESCRIPTION –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")


def main():
    parser = argparse.ArgumentParser(
        description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ BotFather."
    )
    parser.add_argument(
        "--force",
        action="store_true",
        help="–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥—ã —É–∂–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç.",
    )
    args = parser.parse_args()

    asyncio.run(_update_commands(force=args.force))


if __name__ == "__main__":
    main()
