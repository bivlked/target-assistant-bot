import asyncio
import os
import sys
import argparse
from typing import List

from telegram import Bot, BotCommand

from config import telegram


DEFAULT_COMMANDS: List[BotCommand] = [
    BotCommand("start", "üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
    BotCommand("help", "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º"),
    BotCommand("setgoal", "üéØ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–µ–ª—å"),
    BotCommand("today", "üìÖ –ó–∞–¥–∞—á–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"),
    BotCommand("check", "‚úçÔ∏è –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ"),
    BotCommand("status", "üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"),
    BotCommand("motivation", "üí° –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"),
    BotCommand("cancel", "‚õî –û—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥"),
    BotCommand("reset", "üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"),
]


async def _update_commands(force: bool = False):
    """–°–æ–∑–¥–∞—ë—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã BotFather.

    –ï—Å–ª–∏ force=False –∏ –Ω–∞–±–æ—Ä —É–∂–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç ‚Äì –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è.
    """

    token = telegram.token or os.getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –∏–ª–∏ config.py")
        sys.exit(1)

    bot = Bot(token=token)

    current = await bot.get_my_commands()
    if not force and set((c.command, c.description) for c in current) == set(
        (c.command, c.description) for c in DEFAULT_COMMANDS
    ):
        print("‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥—ã —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã ‚Äì –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
        return

    await bot.set_my_commands(DEFAULT_COMMANDS)
    print("‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ BotFather!")


def main():
    parser = argparse.ArgumentParser(
        description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ BotFather."
    )
    parser.add_argument(
        "--force",
        action="store_true",
        help="–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥—ã —É–∂–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç.",
    )
    args = parser.parse_args()

    asyncio.run(_update_commands(force=args.force))


if __name__ == "__main__":
    main()
