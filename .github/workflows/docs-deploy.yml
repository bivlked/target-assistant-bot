name: Deploy Sphinx Documentation to GitHub Pages

on:
  push:
    branches:
      - main # Trigger the workflow on push events to the main branch

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Use a specific version, consistent with tests if possible

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Build Sphinx documentation
        run: |
          cd docs
          make html
      
      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build/html/

  deploy-docs:
    name: Deploy Documentation
    needs: build-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        continue-on-error: true
      
      - name: Wait before retry
        if: steps.deployment.outcome == 'failure'
        run: sleep 30
      
      - name: Retry Deploy to GitHub Pages
        if: steps.deployment.outcome == 'failure'
        id: deployment-retry
        uses: actions/deploy-pages@v4
        continue-on-error: true
      
      - name: Wait longer before final retry
        if: steps.deployment.outcome == 'failure' && steps.deployment-retry.outcome == 'failure'
        run: sleep 60
      
      - name: Final Deploy Attempt
        if: steps.deployment.outcome == 'failure' && steps.deployment-retry.outcome == 'failure'
        uses: actions/deploy-pages@v4 